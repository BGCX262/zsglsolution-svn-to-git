#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4961
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApplication.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="zsgl_solution")]
	public partial class YjmxDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertyjgl_yjmx(yjgl_yjmx instance);
    partial void Updateyjgl_yjmx(yjgl_yjmx instance);
    partial void Deleteyjgl_yjmx(yjgl_yjmx instance);
    #endregion
		
		public YjmxDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["zsgl_solutionConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public YjmxDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YjmxDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YjmxDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public YjmxDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<yjgl_yjmx> yjgl_yjmx
		{
			get
			{
				return this.GetTable<yjgl_yjmx>();
			}
		}
	}
	
	[Table(Name="dbo.yjgl_yjmx")]
	public partial class yjgl_yjmx : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _yj_id;
		
		private System.Nullable<int> _user_id;
		
		private string _yj_zt;
		
		private string _yj_sjr;
		
		private string _yj_fssj;
		
		private string _yj_nr;
		
		private string _yj_fj;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onyj_idChanging(int value);
    partial void Onyj_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onyj_ztChanging(string value);
    partial void Onyj_ztChanged();
    partial void Onyj_sjrChanging(string value);
    partial void Onyj_sjrChanged();
    partial void Onyj_fssjChanging(string value);
    partial void Onyj_fssjChanged();
    partial void Onyj_nrChanging(string value);
    partial void Onyj_nrChanged();
    partial void Onyj_fjChanging(string value);
    partial void Onyj_fjChanged();
    #endregion
		
		public yjgl_yjmx()
		{
			OnCreated();
		}
		
		[Column(Storage="_yj_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int yj_id
		{
			get
			{
				return this._yj_id;
			}
			set
			{
				if ((this._yj_id != value))
				{
					this.Onyj_idChanging(value);
					this.SendPropertyChanging();
					this._yj_id = value;
					this.SendPropertyChanged("yj_id");
					this.Onyj_idChanged();
				}
			}
		}
		
		[Column(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_yj_zt", DbType="VarChar(50)")]
		public string yj_zt
		{
			get
			{
				return this._yj_zt;
			}
			set
			{
				if ((this._yj_zt != value))
				{
					this.Onyj_ztChanging(value);
					this.SendPropertyChanging();
					this._yj_zt = value;
					this.SendPropertyChanged("yj_zt");
					this.Onyj_ztChanged();
				}
			}
		}
		
		[Column(Storage="_yj_sjr", DbType="VarChar(100)")]
		public string yj_sjr
		{
			get
			{
				return this._yj_sjr;
			}
			set
			{
				if ((this._yj_sjr != value))
				{
					this.Onyj_sjrChanging(value);
					this.SendPropertyChanging();
					this._yj_sjr = value;
					this.SendPropertyChanged("yj_sjr");
					this.Onyj_sjrChanged();
				}
			}
		}
		
		[Column(Storage="_yj_fssj", DbType="VarChar(50)")]
		public string yj_fssj
		{
			get
			{
				return this._yj_fssj;
			}
			set
			{
				if ((this._yj_fssj != value))
				{
					this.Onyj_fssjChanging(value);
					this.SendPropertyChanging();
					this._yj_fssj = value;
					this.SendPropertyChanged("yj_fssj");
					this.Onyj_fssjChanged();
				}
			}
		}
		
		[Column(Storage="_yj_nr", DbType="VarChar(50)")]
		public string yj_nr
		{
			get
			{
				return this._yj_nr;
			}
			set
			{
				if ((this._yj_nr != value))
				{
					this.Onyj_nrChanging(value);
					this.SendPropertyChanging();
					this._yj_nr = value;
					this.SendPropertyChanged("yj_nr");
					this.Onyj_nrChanged();
				}
			}
		}
		
		[Column(Storage="_yj_fj", DbType="VarChar(500)")]
		public string yj_fj
		{
			get
			{
				return this._yj_fj;
			}
			set
			{
				if ((this._yj_fj != value))
				{
					this.Onyj_fjChanging(value);
					this.SendPropertyChanging();
					this._yj_fj = value;
					this.SendPropertyChanged("yj_fj");
					this.Onyj_fjChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
